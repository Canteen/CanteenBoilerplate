<?xml version="1.0"?>
<project name="CanteenBoilerplate" default="install" basedir="./">
	<property file="build/${os.name}.build.properties"/>
	<property file="build/build.properties"/>

	<macrodef name="uglifyjs">
		<attribute name="options" default="-m" />
		<attribute name="debug" default="false" />
		<attribute name="compress" default="" />
		<attribute name="order" />
		<attribute name="dir" />
		<attribute name="output" />
		<sequential>
			<fail unless="uglifyjs" message="Path to the uglifyjs program" />
			<echo message="+------------------------------+" />
			<echo message="| Building the Game JavaScript |" />
			<echo message="+------------------------------+" />
			<resourcelist id="files"> 
				<file file="@{order}" />
				<filterchain>
					<prefixlines prefix="@{dir}/" /> 
				</filterchain>
			</resourcelist>
		    <pathconvert property="allFiles" refid="files" pathsep=" " />				
			<exec executable="${uglifyjs}" failonerror="true">
				<arg line="${allFiles}" />
				<arg line="-o @{output}" />
				<arg line="@{options}" />
				<arg line="-c @{compress}" />
				<arg line="--define DEBUG=@{debug},RELEASE=!@{debug}" />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="uglifycss">
		<attribute name="order" />
		<attribute name="dir" />
		<attribute name="output" />
		<sequential>
			<resourcelist id="files"> 
				<file file="@{order}" />
				<filterchain>
					<prefixlines prefix="@{dir}/" /> 
				</filterchain>
			</resourcelist>
		    <pathconvert property="@{output}" refid="files" pathsep=" " />
			<exec executable="${uglifycss}" output="@{output}">
				<arg line="${@{output}}" />
			</exec>
		</sequential>
	</macrodef>
	
	<target name="install" description="Update external libraries">
		<antcall target="install-php" />
		<antcall target="install-components" />
	</target>
	
	<target name="install-components" description="Use Bower to import external dependencies">
		<fail unless="bower.components" message="bower.components must be defined in the build.properties as the list of packages to download with bower" />
		<fail unless="bower" message="bower must be defined in the build.properties as the location of bower" />
		<fail unless="bower.dir" message="bower.dir must be defined in the build.properties as the location of the bower components" />
		<fail unless="js.output" message="js.output must be defined in the build.properties as the location of the output libraries concatination" />
		<fail unless="js.files" message="js.files must be defined in the build.properties as the location of the list of library files to concatinate" />
		<echo message="+--------------------+" />
		<echo message="| Import JS Packages |" />
		<echo message="+--------------------+" />
		<exec executable="${bower}">
			<arg line="install" />
			<arg line="${bower.components}" />
		</exec>
		<echo message="+-------------------------+" />
		<echo message="| Building the Library JS |" />
		<echo message="+-------------------------+" />
		<uglifyjs output="${js.output}" dir="${bower.dir}" order="${js.files}" />
		<echo message="+--------------------------+" />
		<echo message="| Building the Library CSS |" />
		<echo message="+--------------------------+" />
		<uglifycss output="${css.output}" dir="${bower.dir}" order="${css.files}" />
		<echo message="+----------------------+" />
		<echo message="| Importing Components |" />
		<echo message="+----------------------+" />
		<copy todir="${imports.output}">
			<fileset dir="${bower.dir}">
				<patternset>
					<includesfile name="${imports.files}" />
				</patternset>
			</fileset>
		</copy>
	</target>

	<target name="uninstall-components" description="clear the components folder">
		<delete dir="${bower.dir}" />
		<delete dir="${imports.output}" />
	</target>
	
	<target name="install-php">
		<fail unless="composer" message="composer must be defined in the build.properties as the location of composer" />
		<echo message="+---------------------+" />
		<echo message="| Import PHP Packages |" />
		<echo message="+---------------------+" />	
		<exec executable="${composer}">
			<arg line="install" />
			<arg line="--prefer-dist" />
		</exec>
	</target>
	
	<target name="uninstall" description="Remove all of the libraries">
		<fail unless="js.output" message="js.output must be defined in the build.properties as the location of the output libraries concatination" />
		<fail unless="bower.dir" message="bower.dir must be defined in the build.properties as the location of the bower components" />
		<fail unless="composer.dir" message="composer.dir must be defined in the build.properties as the location of the composer downloaded libraries" />
		<fail unless="composer.lock" message="composer.lock must be defined in the build.properties as the location of the composer lock file" />
		<delete dir="${composer.dir}" />
		<delete file="${js.output}" />
		<delete file="${composer.lock}" />
		<antcall target="uninstall-components" />
	</target>
</project>